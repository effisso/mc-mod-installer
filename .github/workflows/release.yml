name: Release

on:
  workflow_dispatch:
    inputs:
      prerelease:
        type: boolean
        description: This is a pre-release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: make build-test-release

    - name: Zip
      run: |
            filePrefix="$(pwd)/out/mcmods"
            cd out/win
            zip -r "$filePrefix-windows.zip" mcmods.exe
            @echo cd ../linux-arm
            @echo tar -zcvf "$filePrefix-linux-arm.tar.gz" mcmods
            @echo cd ../linux-amd
            @echo tar -zcvf "$filePrefix-linux-amd.tar.gz" mcmods
            @echo cd ../darwin-arm
            tar -zcvf "$filePrefix-darwin-arm.tar.gz" mcmods
            cd ../darwin-amd
            tar -zcvf "$filePrefix-darwin-amd.tar.gz" mcmods

    - name: version
      run: |
            SUFFIX=""
            if (( ${{ github.event.inputs.prerelease }} )); then
                SUFFIX="-prerelease-$(git rev-parse --short "$GITHUB_SHA")"
            fi
            echo "::set-output name=release-version::v$(cat VERSION.txt)$SUFFIX"
      id: version
    
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: ${{ github.event.inputs.prerelease }}
        release_name: ${{ steps.version.outputs.release-version }}
        tag_name: ${{ steps.version.outputs.release-version }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

    # - name: upload linux arm
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./out/mcmods-linux-arm.tar.gz
    #     asset_name: mcmods-linux-arm-${{ steps.version.outputs.version }}.tar.gz
    #     asset_content_type: application/gzip
        
    # - name: upload linux amd
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./out/mcmods-linux-amd.tar.gz
    #     asset_name: mcmods-linux-amd-${{ steps.version.outputs.version }}.tar.gz
    #     asset_content_type: application/gzip

    - name: upload darwin arm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./out/mcmods-darwin-arm.tar.gz
        asset_name: mcmods-darwin-arm-${{ steps.version.outputs.version }}.tar.gz
        asset_content_type: application/gzip

    - name: upload darwin amd
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./out/mcmods-darwin-amd.tar.gz
        asset_name: mcmods-darwin-amd-${{ steps.version.outputs.version }}.tar.gz
        asset_content_type: application/gzip

    - name: upload windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./out/mcmods-windows.zip
        asset_name: mcmods-windows-${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip
